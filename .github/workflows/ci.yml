name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/web
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          outputs: type=docker,dest=${{ runner.temp }}/web.tar
      - name: Temporary store image
        uses: actions/upload-artifact@v4
        with:
          name: web-image
          path: ${{ runner.temp }}/web.tar

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [ chrome, firefox, edge ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: web-image

      - name: Load Docker image from artifact
        run: |
          docker load --input web.tar

      - name: Run Docker container
        env:
          REPOSITORY: '${{ github.repository }}'
        run: |
          docker run -d -p 5173:80 ghcr.io/${REPOSITORY,,}/web:sha-${{ github.sha }}

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          browser: ${{ matrix.browser }}
          wait-on: 'http://localhost:5173'

      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-${{ matrix.browser }}
          path: cypress/screenshots/
          retention-days: 7

  push:
    name: Push
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: web-image
      - name: Load Docker image from artifact
        run: |
          docker load --input web.tar
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image
        env:
          REPOSITORY: '${{ github.repository }}'
        run: |
          docker push ghcr.io/${REPOSITORY,,}/web --all-tags

  cleanup:
    runs-on: ubuntu-latest
    needs: push
    if: always()
    steps:
      - name: Remove temporary stored Docker image
        uses: geekyeggo/delete-artifact@v5
        with:
          name: web-image
